'use strict';

var diameter = require('../lib/diameter');

var HOST = '127.0.0.1';
var PORT = 3869;

var options = {
    beforeAnyMessage: diameter.logMessage,
    afterAnyMessage: diameter.logMessage,
    port: PORT,
    host: HOST
};

var socket = diameter.createConnection(options, function() {
    var connection = socket.diameterConnection;
    //var request = connection.createRequest('Diameter Common Messages', 'Capabilities-Exchange');
    var request = connection.createRequest("NASREQ Application", 'AA');
    request.body = request.body.concat([
/*        [ 'Origin-Host', 'gx.pcef.example.com' ],
        [ 'Origin-Realm', 'pcef.example.com' ],
        [ 'Vendor-Id', 10415 ],
        [ 'Origin-State-Id', 219081 ],
        [ 'Supported-Vendor-Id', 10415 ],
        [ 'Auth-Application-Id', 'Diameter Credit Control Application' ]*/

        ['Session-Id', 'dZH7jGEadGog2Uw4'],
        ['Origin-Host','mfssdp.safarifone.com'],
        ['Origin-Realm','www.safarifone.com'],
        ['Destination-Realm','www.safarifone.com'],
        ['Client-Request-Id','23mjyrt65m'],
        ['Diameter-Event-Id', 'qh4bpRn95gCMx1VZ'],
        ['Auth-Application-Id', '1'],

        ['Auth-Request-Type',1],

        [ 'Subscription-Id', [
            [ 'Subscription-Id-Type', 0 ],
            [ 'Subscription-Id-Data', new Buffer( '252615100005', 'utf-8' )]
        ]],
         [ 'User-Equipment-Info', [
             [ 'User-Equipment-Info-Type', 1 ],
             [ 'User-Equipment-Info-Value', new Buffer.from( "123456", 'utf-8' )]
         ]],

        ['User-Name','252615100005'],
        ['User-Password',new Buffer.from( "1212", 'utf-8' )],
        ['Service-Type',18],
        ['IMSI','252615100005'],
        ['Account-Currency','840'],

        [ 'SDP-System-Info', [
            [ 'System-IP',  new Buffer( '192.168.40.100', 'utf-8' ) ],
            [ 'System-Secret', new Buffer( '123456', 'utf-8' )]
        ]],

        [ 'Channel-Info', [
            [ 'Channel-Name',  new Buffer('192.168.40.100', 'utf-8' ) ],
        ]],
        /*[ 'Location-Info', [
            [ 'Location-Type',  new Buffer('2', 'utf-8' ) ],
        ]],*/

        [ 'Location-Info-Type', [
            [ 'Location-Type',  new Buffer('2', 'utf-8' ) ],
            [ 'CELL-ID',  '110' ],
            [ 'LAC-ID', '342' ],
            [ 'MCC',  new Buffer('252', 'utf-8' ) ],
            [ 'NMC',  new Buffer('62', 'utf-8' ) ],
        ]],


/*
        //['Subscription-Id','Grouped'],
        //['Subscription-Id-Type', '0'],
        //['Subscription-Id-Data', '252615100005'],
        ['User-Equipment-Info','Grouped'],
        ['User-Equipment-Info-Type','1'],
        ['User-Equipment-Info-Value','123456'],
        ['SDP-System-Info','Grouped'],
        ['System-IP','192.168.40.100'],
        ['System-Secret','123456'],
        ['Channel-Info','Grouped'],
        ['Channel-Name','USSD'],
        ['Location-Info','Grouped'],
        ['Location-Type','2'],
        ['Location-Info-Type','1'],
        ['CELL-ID','110'],
        ['LAC-ID','342'],
        ['MCC','252'],
        ['NMC','62'],
*/


    ]);
    connection.sendRequest(request).then(function(response) {
        // handle response
        console.log("Request sent to the server");
    }, function(error) {
        console.log('Error sending request: ' + error);
    });
});

// Handling server initiated messages:
socket.on('diameterMessage', function(event) {
    console.log('Received server initiated message');
    if (event.message.command === 'Capabilities-Exchange') {
        event.response.body = event.response.body.concat([
/*          ['Result-Code', 'DIAMETER_SUCCESS'],
            ['Origin-Host', 'gx.pcrf.example.com'],
            ['Origin-Realm', 'pcrf.example.com'],
            ['Host-IP-Address', '2001:db8:3312::1'],
            ['Host-IP-Address', '1.2.3.4'],
            ['Vendor-Id', 123],
            ['Product-Name', 'node-diameter']*/
            ['Session-Id','dZH7jGEadGog2Uw4'],
            ['Origin-Host','mfscbs.safarifone.com'],
            ['Origin-Realm','www.safarifone.com'],
            ['Session-Timeout','70000'],
            ['Result-Code',2001],
            ['Reply-Message','Authentication Successful'],
            ['Auth-Request-Type',1],

        ]);
        event.callback(event.response);
        //socket.diameterConnection.end();
    }
});
socket.on('error', function(err) {
    console.log(err);
});



//npm install -g node-diameter/node-diameter
//npm install diameter / node-diameter
